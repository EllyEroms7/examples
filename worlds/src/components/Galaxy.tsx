/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/galaxy.glb -t -k 
Author: Aliaksandr.melas (https://sketchfab.com/alexandr.melas)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/realistic-galaxy-skybox-hdri-panorama-36305db19f5a43bc805e023ad0f4a6c4
Title: Realistic galaxy Skybox HDRI panorama
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
  };
};

export function Galaxy(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./galaxy.glb") as GLTFResult;
  const groupRef = useRef<THREE.Group>(null);
  useFrame((_, delta) => {
    if (groupRef.current) {
      groupRef.current.rotation.y += delta * 0.01;
      groupRef.current.rotation.x += delta * 0.01;
    }
  });
  return (
    <group {...props} dispose={null} ref={groupRef}>
      <mesh
        name="Object_4"
        geometry={nodes.Object_4.geometry}
        material={materials.material}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("./galaxy.glb");
